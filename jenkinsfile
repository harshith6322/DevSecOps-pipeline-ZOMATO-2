// @Library("email_lib") _ 
pipeline{

    tools {
      nodejs 'nodejs_tool'
      jdk 'jdk_tool'
    }

    agent{
        label {
          label "slave-1"
          retries 3
        }
    }
    


    environment {
        SCANNER_HOME = tool 'mysonar_tool'

        USERNAME_DOCKER="harshithreddy6322"
        IMAGE_TAG="${BUILD_ID}"
        IMAGE_NAME="ZOMATOAPP"



    }


    stages{
        stage("Clean Workspace"){
            steps{
                cleanWs()
            }
        }


        stage("Code"){
            steps{
                git branch: 'main', url: 'https://github.com/harshith6322/DevSecOps-pipeline-ZOMATO-2.git'
            }
        }


        stage("CQA"){
            steps{

                script{

                    withSonarQubeEnv("mysonar_server") {
                        sh """
                            ${SCANNER_HOME}/bin/sonar-scanner \
                            -Dsonar.projectKey=ZOMATO_PROJECT \
                            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**,**/.git/**,**/coverage/**,**/*.min.js \
                         """  

                    }
                }
            }

        }


        stage("Quality Gate"){
            steps{

                script{

                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar_token'
                }
            }
        }


        stage("Install Dep"){
            steps{

                sh '''
                    npm install
                    npm run build
                    zip -r frontend-${IMAGE_TAG}.zip build/
                '''
           
            }

        }


          stage("Audit"){
            steps {

               sh "npm audit --json > npm-audit-report.json || true"
            }
        }


        stage("Test"){
            steps{
                sh "npm test || true"
            }
        }


        // stage("Nexus artifacts"){
        //     steps{

        //         nexusArtifactUploader(nexusVersion: 'nexus3',protocol: 'http',nexusUrl: '34.229.11.25:8081',repository: 'react_build_storage',credentialsId: 'nexsus_token',groupId: '',version: "${IMAGE_TAG}",artifacts: [[artifactId: '',classifier: '',file: "frontend-${IMAGE_TAG}.zip",type: 'zip']]
        //         )         
        //     }
        // }


        stage('Build Docker Image') {
            steps {
               
                sh "docker build --tag ${USERNAME_DOCKER}/${IMAGE_NAME}:${IMAGE_TAG} ."

                   
            }
        }

        stage('Trivy') {
            steps {
               
                sh "trivy image ${USERNAME_DOCKER}/${IMAGE_NAME}:${IMAGE_TAG} >> trivy_scan_ouput.txt"
                
                   
            }
        }


        stage("Docker Image"){
            steps{

                withDockerRegistry(credentialsId: 'docker_token', url: 'https://hub.docker.com/repositories/harshithreddy6322') {

                 // some block
                  sh "docker push ${USERNAME_DOCKER}/${IMAGE_NAME}:${IMAGE_TAG}"
                  }

            }
        }


        stage("Pull image"){
            steps{

                sh "docker pull ${USERNAME_DOCKER}/${IMAGE_NAME}:${IMAGE_TAG}"
                sh "docker run -itd -p 80:80 ${USERNAME_DOCKER}/${IMAGE_NAME}:${IMAGE_TAG}"
                sh "sleep 2m"
                sh "docker rm -f ${USERNAME_DOCKER}/${IMAGE_NAME}:${IMAGE_TAG}"

            }

        }


//         post {
//   always {
//     script {
//       // ensure the attachment files exist before sending (optional)
//       sh 'ls -lah npm-audit-report.json || true; ls -lah trivy_scan_ouput.txt || true; ls -lah frontend-*.zip || true'

//       sendEmail([
//         to: 'harshithreddy6322@gmail.com,rrchennareddy1971@gmail.com',
//         subject: "${env.JOB_NAME} #${env.BUILD_NUMBER} - ${currentBuild.currentResult}",
//         body: "<p>Build <b>${env.JOB_NAME} #${env.BUILD_NUMBER}</b> finished with status: <b>${currentBuild.currentResult}</b>.</p><p><a href='${env.BUILD_URL}'>Open build</a></p>",
//         attachments: "npm-audit-report.json,trivy_scan_ouput.txt,frontend-${env.IMAGE_TAG}.zip"
//       ])
//     }
//   }
// }

    }
}